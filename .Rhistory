library(tidyverse)
library(tidycensus)
library(spatial)
library(sf)
set.seed(1234)
library(readxl)
library(leaflet)
# Convert UIS and Race data to Percents
# Units in Structure / tenure
acs_data_tract <- acs_data_tract %>%
mutate(uis_1d_per = uis_1dE/uis_totE) %>%
mutate(uis_1a_per = uis_1aE/uis_totE) %>%
mutate(uis_2_per = uis_2E/uis_totE) %>%
mutate(uis_3.4_per = uis_3.4E/uis_totE) %>%
mutate(uis_5.9_per = uis_5.9E/uis_totE) %>%
mutate(uis_10.19_per = uis_10.19E/uis_totE) %>%
mutate(uis_20.49_per = uis_20.49E/uis_totE) %>%
mutate(renter_per = renter_occupiedE/housing_unitsE) %>%
mutate(race_white_per = race_whiteE/population_raceE) %>%
mutate(race_black_per = race_blackE/population_raceE) %>%
mutate(race_amindian_per = race_amindianE/population_raceE) %>%
mutate(race_asian_per = race_asianE/population_raceE) %>%
mutate(race_pacisl_per = race_pacislE/population_raceE) %>%
mutate(race_other_per = race_otherE/population_raceE) %>%
mutate(race_twoplus_per = race_twoplusE/population_raceE) %>%
mutate(race_hisp_per = race_hispE/population_raceE) %>%
mutate(age_over_65_per = (male65.66E+male67.69E+male70.74E+male75.79E+male80.84E+male85andupE+                               female65.66E+female67.69E+female70.74E+female75.79E+female80.84E+
female85andupE)/total_ageE) %>%
#mutate_at(vars(uis_1d_per:age_over_65_per),funs(. * 100)) %>%  #multiply values by 100
mutate_at(vars(uis_1d_per:age_over_65_per),funs(round(.,3))) %>%  # Round scaled values
mutate(totalpop=population_raceE)
#census_api_key("0bb4ac54f5ef401013b255be5f5c4f4d8960d00a", install=T)  #Census API key created for UCLA.
census_data <- load_variables (2021, "acs5", cache=T) #Load available data - use this to identify the table codes for the API call below.
vars <- c (median_income="B25119_001", #median income
housing_units="B25003_001", #Housing Units total
renter_occupied="B25003_003", #Tenure
population_race="B03002_001", #race/ethnic total
race_white="B03002_003", #white NH alone
race_black="B03002_004", #black/african american NH
race_amindian="B03002_005", #american indian/alaska native NH
race_asian="B03002_006", #asian NH
race_pacisl="B03002_007", #native hawaiian and other pacific islander NH
race_other="B03002_008", #some other race alone NH
race_twoplus="B03002_009", #two or more races NH
race_hisp ="B03002_012", #total Hisp any race
median_age ="B01002_001",
median_gross_rent = "B25111_001", #median gross rent
total_value_estimate = "B25075_001", #Total Household value?
estimate_median_value = "B25077_001", #Median Household Value
uis_tot = "B25024_001", #units in structure - total
uis_1d = "B25024_002", #units in structure - 1 detached
uis_1a = "B25024_003", #units in structure -1 attached
uis_2 = "B25024_004", #units in structure - 2
uis_3.4 = "B25024_005", #units in structure - 3 to 4
uis_5.9 = "B25024_006", #units in structure - 5 to 9
uis_10.19 = "B25024_007", #units in structure - 10 to 19
uis_20.49 = "B25024_008", #units in structure - 20 to 49
uis_50 = "B25024_009", #units in structure - 50+
uis_mobile = "B25024_010", #units in structure - mobile home
uis_van = "B25024_011", #units in structure -  Boat, RV and Van
total_age = "B01001_001",
male_u5 = "B01001_003", #male under 5 years
male5.9 = "B01001_004", #males aged 5-10
male65.66 = "B01001_020", #males 65-66
male67.69 = "B01001_021",#male 67 to 69 years
male70.74 = "B01001_022",#male 70 to 74 years
male75.79 = "B01001_023",#male 75 to 79 years
male80.84 = "B01001_024",#male 80 to 84 years
male85andup = "B01001_025",#male 85+
total_female = "B01001_026", #total female (sex by age)
female_u5 = "B01001_027", #female 0 to 4 years
female5.9 = "B01001_028", #female 5 to 9 years
female65.66 = "B01001_044", #female 65 to 66 years
female67.69 = "B01001_045", #female 67 to 69 years
female70.74 = "B01001_046", #female 70 to 74 years
female75.79 = "B01001_047", #female 75 to 79
female80.84 = "B01001_048", #female 80 to 84
female85andup = "B01001_049" #female 85 and above
)
options(tigris_use_cache=TRUE)
acs_data_tract <-get_acs (state = "06", #California
geography = "tract",
variables = vars,
geometry = T,
survey = "acs5",
output = "wide",
year=2021)
# #
#
acs_data_tract <- acs_data_tract[, -grep("M$", colnames(acs_data_tract))]
# acs_data_city <-get_acs (state = "06", #California
#                  geography = "place",
#                  variables = vars,
#                  geometry = T,
#                  survey = "acs5",
#                  output = "wide",
#                  year=2021)
# acs_data_city <- acs_data_city[, -grep("M$", colnames(acs_data_city))] #Drop MOE Estimates
# write_csv(acs_data_city,"Output/census_direct_output_test.csv")
# Convert UIS and Race data to Percents
# Units in Structure / tenure
acs_data_tract <- acs_data_tract %>%
mutate(uis_1d_per = uis_1dE/uis_totE) %>%
mutate(uis_1a_per = uis_1aE/uis_totE) %>%
mutate(uis_2_per = uis_2E/uis_totE) %>%
mutate(uis_3.4_per = uis_3.4E/uis_totE) %>%
mutate(uis_5.9_per = uis_5.9E/uis_totE) %>%
mutate(uis_10.19_per = uis_10.19E/uis_totE) %>%
mutate(uis_20.49_per = uis_20.49E/uis_totE) %>%
mutate(renter_per = renter_occupiedE/housing_unitsE) %>%
mutate(race_white_per = race_whiteE/population_raceE) %>%
mutate(race_black_per = race_blackE/population_raceE) %>%
mutate(race_amindian_per = race_amindianE/population_raceE) %>%
mutate(race_asian_per = race_asianE/population_raceE) %>%
mutate(race_pacisl_per = race_pacislE/population_raceE) %>%
mutate(race_other_per = race_otherE/population_raceE) %>%
mutate(race_twoplus_per = race_twoplusE/population_raceE) %>%
mutate(race_hisp_per = race_hispE/population_raceE) %>%
mutate(age_over_65_per = (male65.66E+male67.69E+male70.74E+male75.79E+male80.84E+male85andupE+                               female65.66E+female67.69E+female70.74E+female75.79E+female80.84E+
female85andupE)/total_ageE) %>%
#mutate_at(vars(uis_1d_per:age_over_65_per),funs(. * 100)) %>%  #multiply values by 100
mutate_at(vars(uis_1d_per:age_over_65_per),funs(round(.,3))) %>%  # Round scaled values
mutate(totalpop=population_raceE)
acs_data_tract <- acs_data_tract %>%
rename(
median_income = median_incomeE,
median_age = median_ageE,
median_gross_rent = median_gross_rentE,
estimate_median_value = estimate_median_valueE,
name = NAME)
acs_data_tract <- acs_data_tract[, -grep("E$", colnames(acs_data_tract))] #Drop remaining estimates, leaving only percent and necessary estimates
write_csv(acs_data_tract,"/Working/CleanedTract.csv")
write_csv(acs_data_tract,"Working/CleanedTract.csv")
View(acs_data_tract)
View(acs_data_tract)
acs_data_tract <-get_acs (state = "06", #California
geography = "tract",
variables = vars,
geometry = T,
survey = "acs5",
output = "wide",
year=2021)
View(acs_data_tract)
View(acs_data_tract)
separate(acs_data_tract,col="name",into = c("tract","county","state"))
separate(acs_data_tract,col=name,into = c("tract","county","state"))
View(acs_data_tract)
View(acs_data_tract)
separate(acs_data_tract,col=NAME,into = c("tract","county","state"))
separate(acs_data_tract,col=NAME,into = c("tract","county","state"),by=",")
separate(acs_data_tract,col=NAME,into = c("tract","county","state"),sep=",")
acs_data_tract %>% separate(col=NAME,into = c("tract","county","state"),sep=",")
library(tm)
install.packages("tm")
library(tm)
acs_data_tract %>% removeWords("County")
removeWords(acs_data_tract,"County")
?removeWords
View(acs_data_tract)
View(acs_data_tract)
View(acs_data_tract)
#Identify the Counties in the data
acs_data_tract <- acs_data_tract %>% separate(col=NAME,into = c("tract","county","state"),sep=",")
View(acs_data_tract)
View(acs_data_tract)
acs_data_tract %>% gsub("County","")
str_remove(acs_data_tract$county,"County")
acs_data_tract$county <- str_remove(acs_data_tract$county,"County")
HCD_Data <- read_csv("/Input/2022-income-limits.csv")
HCD_Data <- read_csv("Input/2022-income-limits.csv")
HCD_Data
HCD_Data %>% select(AMi,County)
HCD_Data %>% select(AMI,County)
HCD_Data %>% select(County,AMI)
HCD_Data <- HCD_Data %>% select(County,AMI)
View(HCD_Data)
View(HCD_Data)
merge(acs_data_tract,HCD_Data,by.x="county",by.y="County",all.x=T)
HCD_Data %>% mutate(county=toupper(county))
HCD_Data$County <- toupper(HCD_Data$County)
acs_data_tract$county <- toupper(acs_data_tract$county)
merge(acs_data_tract,HCD_Data,by.x="county",by.y="County",all.x=T)
combined <- merge(acs_data_tract,HCD_Data,by.x="county",by.y="County",all.x=T)
View(combined)
View(combined)
acs_data_tract$county <- str_remove(acs_data_tract$county," County") #Remove the term "County" from the county column so we can match later.
acs_data_tract <- read_csv("Working/CleanedTract.csv")
#Identify the Counties in the data
acs_data_tract <- acs_data_tract %>% separate(col=NAME,into = c("tract","county","state"),sep=",") #Split the name column into three so we can see the Counties
# Convert UIS and Race data to Percents
# Units in Structure / tenure
acs_data_tract <- acs_data_tract %>%
mutate(uis_1d_per = uis_1dE/uis_totE) %>%
mutate(uis_1a_per = uis_1aE/uis_totE) %>%
mutate(uis_2_per = uis_2E/uis_totE) %>%
mutate(uis_3.4_per = uis_3.4E/uis_totE) %>%
mutate(uis_5.9_per = uis_5.9E/uis_totE) %>%
mutate(uis_10.19_per = uis_10.19E/uis_totE) %>%
mutate(uis_20.49_per = uis_20.49E/uis_totE) %>%
mutate(renter_per = renter_occupiedE/housing_unitsE) %>%
mutate(race_white_per = race_whiteE/population_raceE) %>%
mutate(race_black_per = race_blackE/population_raceE) %>%
mutate(race_amindian_per = race_amindianE/population_raceE) %>%
mutate(race_asian_per = race_asianE/population_raceE) %>%
mutate(race_pacisl_per = race_pacislE/population_raceE) %>%
mutate(race_other_per = race_otherE/population_raceE) %>%
mutate(race_twoplus_per = race_twoplusE/population_raceE) %>%
mutate(race_hisp_per = race_hispE/population_raceE) %>%
mutate(age_over_65_per = (male65.66E+male67.69E+male70.74E+male75.79E+male80.84E+male85andupE+                               female65.66E+female67.69E+female70.74E+female75.79E+female80.84E+
female85andupE)/total_ageE) %>%
#mutate_at(vars(uis_1d_per:age_over_65_per),funs(. * 100)) %>%  #multiply values by 100
mutate_at(vars(uis_1d_per:age_over_65_per),funs(round(.,3))) %>%  # Round scaled values
mutate(totalpop=population_raceE)
acs_data_tract <-get_acs (state = "06", #California
geography = "tract",
variables = vars,
geometry = T,
survey = "acs5",
output = "wide",
year=2021)
# #
#
acs_data_tract <- acs_data_tract[, -grep("M$", colnames(acs_data_tract))]
# Convert UIS and Race data to Percents
# Units in Structure / tenure
acs_data_tract <- acs_data_tract %>%
mutate(uis_1d_per = uis_1dE/uis_totE) %>%
mutate(uis_1a_per = uis_1aE/uis_totE) %>%
mutate(uis_2_per = uis_2E/uis_totE) %>%
mutate(uis_3.4_per = uis_3.4E/uis_totE) %>%
mutate(uis_5.9_per = uis_5.9E/uis_totE) %>%
mutate(uis_10.19_per = uis_10.19E/uis_totE) %>%
mutate(uis_20.49_per = uis_20.49E/uis_totE) %>%
mutate(renter_per = renter_occupiedE/housing_unitsE) %>%
mutate(race_white_per = race_whiteE/population_raceE) %>%
mutate(race_black_per = race_blackE/population_raceE) %>%
mutate(race_amindian_per = race_amindianE/population_raceE) %>%
mutate(race_asian_per = race_asianE/population_raceE) %>%
mutate(race_pacisl_per = race_pacislE/population_raceE) %>%
mutate(race_other_per = race_otherE/population_raceE) %>%
mutate(race_twoplus_per = race_twoplusE/population_raceE) %>%
mutate(race_hisp_per = race_hispE/population_raceE) %>%
mutate(age_over_65_per = (male65.66E+male67.69E+male70.74E+male75.79E+male80.84E+male85andupE+                               female65.66E+female67.69E+female70.74E+female75.79E+female80.84E+
female85andupE)/total_ageE) %>%
#mutate_at(vars(uis_1d_per:age_over_65_per),funs(. * 100)) %>%  #multiply values by 100
mutate_at(vars(uis_1d_per:age_over_65_per),funs(round(.,3))) %>%  # Round scaled values
mutate(totalpop=population_raceE)
acs_data_tract <- acs_data_tract %>%
rename(
median_income = median_incomeE,
median_age = median_ageE,
median_gross_rent = median_gross_rentE,
estimate_median_value = estimate_median_valueE,
name = NAME)
acs_data_tract <- acs_data_tract[, -grep("E$", colnames(acs_data_tract))] #Drop remaining estimates, leaving only percent and necessary estimates
write_csv(acs_data_tract,"Working/CleanedTract.csv")
acs_data_tract <- read_csv("Working/CleanedTract.csv")
#Identify the Counties in the data
acs_data_tract <- acs_data_tract %>% separate(col=name,into = c("tract","county","state"),sep=",") #Split the name column into three so we can see the Counties
acs_data_tract$county <- str_remove(acs_data_tract$county," County") #Remove the term "County" from the county column so we can match later.
HCD_Data <- read_csv("Input/2022-income-limits.csv")
HCD_Data <- HCD_Data %>% select(County,AMI)
HCD_Data$County <- toupper(HCD_Data$County)
acs_data_tract$county <- toupper(acs_data_tract$county)
combined <- merge(acs_data_tract,HCD_Data,by.x="county",by.y="County",all.x=T)
combined
merge(acs_data_tract,HCD_Data,by.x="county",by.y="County",all.x=T)
merge(acs_data_tract,HCD_Data,by.x="county",by.y="COUNTY",all.x=T)
acs_data_tract$county <- str_remove(acs_data_tract$county," ")
HCD_Data$County <- str_remove(HCD_Data$county," ")
HCD_Data <- read_csv("Input/2022-income-limits.csv")
HCD_Data <- HCD_Data %>% select(County,AMI)
HCD_Data$county <- str_remove(HCD_Data$county," ")
HCD_Data <- read_csv("Input/2022-income-limits.csv")
HCD_Data <- HCD_Data %>% select(County,AMI)
HCD_Data$county <- str_remove(HCD_Data$county," ")
HCD_Data
HCD_Data$County <- str_remove(HCD_Data$county," ")
HCD_Data$County <- str_remove(HCD_Data$County," ")
HCD_Data$County <- toupper(HCD_Data$County)
acs_data_tract$county <- toupper(acs_data_tract$county)
merge(acs_data_tract,HCD_Data,by.x="county",by.y="County",all.x=T)
combined <- merge(acs_data_tract,HCD_Data,by.x="county",by.y="County",all.x=T)
View(combined)
View(combined)
is.na(combined$AMI)
combined[is.na(combined$AMI),"County"]
combined[is.na(combined$AMI),"county"]
unique(combined[is.na(combined$AMI),"county"])
acs_data_tract <- read_csv("Working/CleanedTract.csv")
#Identify the Counties in the data
acs_data_tract <- acs_data_tract %>% separate(col=name,into = c("tract","county","state"),sep=",") #Split the name column into three so we can see the Counties
acs_data_tract$county <- str_remove(acs_data_tract$county,"County") #Remove the term "County" from the county column so we can match later.
acs_data_tract$county <- str_remove(acs_data_tract$county," County")
acs_data_tract$county <- str_remove(acs_data_tract$county,"County ")
HCD_Data <- read_csv("Input/2022-income-limits.csv")
HCD_Data <- HCD_Data %>% select(County,AMI)
HCD_Data$County <- str_remove(HCD_Data$County," ")
HCD_Data$County <- toupper(HCD_Data$County)
acs_data_tract$county <- toupper(acs_data_tract$county)
combined <- merge(acs_data_tract,HCD_Data,by.x="county",by.y="County",all.x=T)
unique(combined[is.na(combined$AMI),"county"])  #Which counties are not working???!!!!
acs_data_tract <- read_csv("Working/CleanedTract.csv")
#Identify the Counties in the data
acs_data_tract <- acs_data_tract %>% separate(col=name,into = c("tract","county","state"),sep=",") #Split the name column into three so we can see the Counties
acs_data_tract$county <- str_remove(acs_data_tract$county," County")
acs_data_tract$county <- str_remove(acs_data_tract$county," County ")
acs_data_tract <- read_csv("Working/CleanedTract.csv")
#Identify the Counties in the data
acs_data_tract <- acs_data_tract %>% separate(col=name,into = c("tract","county","state"),sep=",") #Split the name column into three so we can see the Counties
acs_data_tract$county <- str_remove(acs_data_tract$county," County ")
HCD_Data <- read_csv("Input/2022-income-limits.csv")
HCD_Data <- HCD_Data %>% select(County,AMI)
HCD_Data$County <- str_remove(HCD_Data$County," ")
HCD_Data$County <- toupper(HCD_Data$County)
acs_data_tract$county <- toupper(acs_data_tract$county)
combined <- merge(acs_data_tract,HCD_Data,by.x="county",by.y="County",all.x=T)
unique(combined[is.na(combined$AMI),"county"])  #Which counties are not working???!!!!
acs_data_tract$county <- str_remove(acs_data_tract$county," County")
HCD_Data <- read_csv("Input/2022-income-limits.csv")
HCD_Data <- HCD_Data %>% select(County,AMI)
HCD_Data$County <- str_remove(HCD_Data$County," ")
HCD_Data$County <- toupper(HCD_Data$County)
acs_data_tract$county <- toupper(acs_data_tract$county)
combined <- merge(acs_data_tract,HCD_Data,by.x="county",by.y="County",all.x=T)
unique(combined[is.na(combined$AMI),"county"])  #Which counties are not working???!!!!
acs_data_tract$county
HCD_Data$County
acs_data_tract <- read_csv("Working/CleanedTract.csv")
#Identify the Counties in the data
acs_data_tract <- acs_data_tract %>% separate(col=name,into = c("tract","county","state"),sep=",") #Split the name column into three so we can see the Counties
acs_data_tract$county <- str_remove(acs_data_tract$county," County")
HCD_Data <- read_csv("Input/2022-income-limits.csv")
HCD_Data <- HCD_Data %>% select(County,AMI)
#HCD_Data$County <- str_remove(HCD_Data$County," ")
HCD_Data$County <- toupper(HCD_Data$County)
acs_data_tract$county <- toupper(acs_data_tract$county)
combined <- merge(acs_data_tract,HCD_Data,by.x="county",by.y="County",all.x=T)
unique(combined[is.na(combined$AMI),"county"])  #Which counties are not working???!!!!
acs_data_tract$county
HCD_Data$County
acs_data_tract$county
acs_data_tract$county <- trimws(acs_data_tract$county,"both")
HCD_Data <- read_csv("Input/2022-income-limits.csv")
HCD_Data <- HCD_Data %>% select(County,AMI)
#HCD_Data$County <- str_remove(HCD_Data$County," ")
HCD_Data$County <- toupper(HCD_Data$County)
acs_data_tract$county <- toupper(acs_data_tract$county)
combined <- merge(acs_data_tract,HCD_Data,by.x="county",by.y="County",all.x=T)
unique(combined[is.na(combined$AMI),"county"])  #Which counties are not working???!!!!
combined$StateAMI <- 101,600
combined$StateAMI <- 101600
combined$StateAMI
acs_data_tract <- read_csv("Working/CleanedTract.csv")
#Identify the Counties in the data
acs_data_tract <- acs_data_tract %>% separate(col=name,into = c("tract","county","state"),sep=",") #Split the name column into three so we can see the Counties
acs_data_tract$county <- str_remove(acs_data_tract$county," County")
acs_data_tract$county <- trimws(acs_data_tract$county,"both")
HCD_Data <- read_csv("Input/2022-income-limits.csv")
HCD_Data <- HCD_Data %>% select(County,AMI,LI_4)
HCD_Data$County <- toupper(HCD_Data$County)
acs_data_tract$county <- toupper(acs_data_tract$county)
combined <- merge(acs_data_tract,HCD_Data,by.x="county",by.y="County",all.x=T)
combined$StateAMI <- 101600
unique(combined[is.na(combined$AMI),"county"])  #Which counties are not working???!!!!
combined$StateAMI <- 101600*0.8
combined$StateAMI80 <- 101600*0.8
combined$median_income
combined$median_income < combined$LI_4
combined$LowIncomeTract
combined$median_income < combined$LI_4 | combined$median_income < combined$StateAMI80
combined$median_income < combined$LI_4 | combined$median_income < combined$StateAMI80
combined$LowIncomeTract <- combined$median_income < combined$LI_4 | combined$median_income < combined$StateAMI80
View(combined)
View(combined)
leaflet(combined) %>%
addTiles() %>%
addPolygons()
plot(combined)
as_Spatial(combined)
class(combined)
class(acs_data_tract)
